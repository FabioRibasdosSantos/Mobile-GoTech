import{J as h,aS as l}from"./index.90546432.js";let p;const w=new Uint8Array(16);function g(){if(!p&&(p=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!p))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return p(w)}const e=[];for(let t=0;t<256;++t)e.push((t+256).toString(16).slice(1));function U(t,n=0){return e[t[n+0]]+e[t[n+1]]+e[t[n+2]]+e[t[n+3]]+"-"+e[t[n+4]]+e[t[n+5]]+"-"+e[t[n+6]]+e[t[n+7]]+"-"+e[t[n+8]]+e[t[n+9]]+"-"+e[t[n+10]]+e[t[n+11]]+e[t[n+12]]+e[t[n+13]]+e[t[n+14]]+e[t[n+15]]}const x=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var y={randomUUID:x};function v(t,n,s){if(y.randomUUID&&!n&&!t)return y.randomUUID();t=t||{};const a=t.random||(t.rng||g)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,n){s=s||0;for(let d=0;d<16;++d)n[s+d]=a[d];return n}return U(a)}function _(){const{supabase:t}=l(),{user:n}=h(),s=async c=>{const{data:r,error:i}=await t.from(c).select("*");if(i)throw i;return r},a=async(c,r)=>{const{data:i,error:o}=await t.from(c).select("*").eq("user_id",r);if(o)throw o;return i},d=async(c,r)=>{const{data:i,error:o}=await t.from(c).select("*").eq("id",r);if(o)throw o;return i[0]};return{list:s,listPublic:a,getById:d,post:async(c,r)=>{const i=v(),{data:o,error:u}=await t.from(c).insert([{...r,user_id:n.value.id,checkin_code:i}]);if(u)throw u;return o},update:async(c,r)=>{const o=(await d(c,r.id)).checkin_code,{data:u,error:m}=await t.from(c).update({...r,checkin_code:o}).match({id:r.id});if(m)throw m;return u},remove:async(c,r)=>{const{data:i,error:o}=await t.from(c).delete().match({id:r});if(o)throw o;return i}}}export{_ as u};
